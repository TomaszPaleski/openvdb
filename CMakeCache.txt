# This is the CMakeCache file.
# For build in directory: c:/Users/PC/source/repos/openvdb
# It was generated by CMake: C:/Users/PC/source/repos/cmake/cmake-3.24.0-windows-x86_64/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//The directory containing a CMake configuration file for Boost.
Boost_DIR:PATH=Boost_DIR-NOTFOUND

//Path to a file.
Boost_INCLUDE_DIR:PATH=C:/local/boost_1_74_0

//Boost iostreams library (debug)
Boost_IOSTREAMS_LIBRARY_DEBUG:FILEPATH=C:/local/boost_1_74_0/lib64-msvc-14.2/boost_iostreams-vc142-mt-gd-x64-1_74.lib

//Boost iostreams library (release)
Boost_IOSTREAMS_LIBRARY_RELEASE:FILEPATH=C:/local/boost_1_74_0/lib64-msvc-14.2/boost_iostreams-vc142-mt-x64-1_74.lib

//Boost library directory DEBUG
Boost_LIBRARY_DIR_DEBUG:PATH=C:/local/boost_1_74_0/lib64-msvc-14.2

//Boost library directory RELEASE
Boost_LIBRARY_DIR_RELEASE:PATH=C:/local/boost_1_74_0/lib64-msvc-14.2

//Boost regex library (debug)
Boost_REGEX_LIBRARY_DEBUG:FILEPATH=C:/local/boost_1_74_0/lib64-msvc-14.2/boost_regex-vc142-mt-gd-x64-1_74.lib

//Boost regex library (release)
Boost_REGEX_LIBRARY_RELEASE:FILEPATH=C:/local/boost_1_74_0/lib64-msvc-14.2/boost_regex-vc142-mt-x64-1_74.lib

//Path to a program.
CCACHE_PATH:FILEPATH=CCACHE_PATH-NOTFOUND

//Path to a program.
CMAKE_AR:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/lib.exe

//Choose the type of build. CMake natively supports the following
// options: None Debug Release
//\n    RelWithDebInfo MinSizeRel. OpenVDB additionally supports
// the following sanitizers and tools:
//\n    coverage tsan asan lsan msan ubsan
CMAKE_BUILD_TYPE:STRING=Release

//Semicolon separated list of supported configuration types, only
// supports Debug, Release, MinSizeRel, and RelWithDebInfo, anything
// else will be ignored.
CMAKE_CONFIGURATION_TYPES:STRING=Debug;Release;MinSizeRel;RelWithDebInfo

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /GR /EHsc

//Flags used by the C++ compiler during coverage builds.
CMAKE_CXX_FLAGS_:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/Zi /Ob0 /Od /RTC1

//Flags used by the C++ compiler during DebugNoInfo builds.
CMAKE_CXX_FLAGS_DebugNoInfo:STRING=

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/Zi /O2 /Ob1 /DNDEBUG

//The C++ standard whose features are requested to build OpenVDB
// components.
CMAKE_CXX_STANDARD:STRING=14

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during coverage builds.
CMAKE_EXE_LINKER_FLAGS_:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=C:/Users/PC/source/repos/openvdb/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=C:/Program Files/OpenVDB

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.32.31326/bin/Hostx64/x64/link.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=CMAKE_MT-NOTFOUND

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=OpenVDB

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=9.1.1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=9

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=rc

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during coverage builds.
CMAKE_SHARED_LINKER_FLAGS_:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Explicitly link the OpenVDB executables against a particular
// concurrent malloc library.
//\n    Options are: None Auto Jemalloc Tbbmalloc. Although not
// required, it is strongly recommended
//\n    to use a concurrent memory allocator. Has no effect if OPENVDB_BUILD_BINARIES
// and
//\n    OPENVDB_BUILD_UNITTESTS are false. Auto is the default and
// implies Jemalloc, unless USE_MAYA
//\n    is ON or Jemalloc is unavailable, in which case Tbbmalloc
// is used. Note that this is not
//\n    linked into library builds and defers this choice to downstream
// applications via explicit
//\n    CMake targets.
CONCURRENT_MALLOC:STRING=Auto

//Disable CMakes default system search paths when locating dependencies.
// When enabled, CMake will fall back to
//\nits default system search routine if it cannot find a dependency
// with the provided settings. When disabled, only
//\npaths provided through the Xxx_ROOT, supported XXX_INCLUDEDIR/XXX_LIBRARYDIR
// variables or the SYSTEM_LIBRARY_PATHS
//\nlist will be searched.
DISABLE_CMAKE_SEARCH_PATHS:BOOL=OFF

//Disable minimum version checks for OpenVDB dependencies. It is
// strongly recommended that this remains disabled.
//\nConsider updating your dependencies where possible if encountering
// minimum requirement CMake errors.
DISABLE_DEPENDENCY_VERSION_CHECKS:BOOL=OFF

//No help, variable specified on the command line.
ENABLE_TBB:UNINITIALIZED=1

//Path to a program.
GCOVR_PATH:FILEPATH=GCOVR_PATH-NOTFOUND

//Whether to attempt to compress PDB symbol data in MSVC debug
// builds.
MSVC_COMPRESS_PDB:BOOL=OFF

//The number of threads to use when invoking MSVC builds with cmake
// --build. CMake defaults to 1. Note that
//\ncmake --parallel and CMAKE_BUILD_PARALLEL_LEVEL only change
// the number of PROJECTS that are built in parallel,
//\nNOT the number of TU's 
MSVC_MP_THREAD_COUNT:STRING=

//Build for compatibility with version N of the OpenVDB Grid ABI,
// where N is 6, 7, 8 etc. (some newer features
//\nwill be disabled). If OPENVDB_BUILD_CORE is OFF, CMake attempts
// to query the installed vdb_print binary to
//\ndetermine the ABI number. You may set this to force a given
// ABI number.
OPENVDB_ABI_VERSION_NUMBER:STRING=9

//Build the OpenVDB AX library. Turns ON if USE_AX is ON.
OPENVDB_BUILD_AX:BOOL=OFF

//Build the OpenVDB AX unit tests
OPENVDB_BUILD_AX_UNITTESTS:BOOL=OFF

//Enable the vdb binaries. Only vdb_print is enabled by default
OPENVDB_BUILD_BINARIES:BOOL=ON

//Enable the core OpenVDB library. Both static and shared versions
// are enabled by default
OPENVDB_BUILD_CORE:BOOL=ON

//Build the OpenVDB documentation
OPENVDB_BUILD_DOCS:BOOL=OFF

//Build the Houdini ABI tests
OPENVDB_BUILD_HOUDINI_ABITESTS:BOOL=OFF

//Build the Houdini plugin
OPENVDB_BUILD_HOUDINI_PLUGIN:BOOL=OFF

//Build the Maya plugin
OPENVDB_BUILD_MAYA_PLUGIN:BOOL=OFF

//Build the NanoVDB library. Turns ON if USE_NANOVDB is ON.
OPENVDB_BUILD_NANOVDB:BOOL=OFF

//Build the pyopenvdb Python module
OPENVDB_BUILD_PYTHON_MODULE:BOOL=OFF

//Build the OpenVDB unit tests
OPENVDB_BUILD_UNITTESTS:BOOL=OFF

//Build dynamically linked version of the core library.
OPENVDB_CORE_SHARED:BOOL=ON

//Build statically linked version of the core library.
OPENVDB_CORE_STATIC:BOOL=ON

//Enable or disable pre-defined compiler warnings
OPENVDB_CXX_STRICT:BOOL=OFF

//Disable the implicit linking of Boost libraries on Windows
OPENVDB_DISABLE_BOOST_IMPLICIT_LINKING:BOOL=ON

//Build with RPATH information
OPENVDB_ENABLE_RPATH:BOOL=ON

//Adds a CMake uninstall target.
OPENVDB_ENABLE_UNINSTALL:BOOL=ON

//Generate messages for upcoming deprecation
OPENVDB_FUTURE_DEPRECATION:BOOL=ON

//Install the provided OpenVDB CMake modules when building the
// core library
OPENVDB_INSTALL_CMAKE_MODULES:BOOL=ON

//An optional custom string to append to the OpenVDB namespace.
// This is used to configure version.h.
OPENVDB_NAMESPACE_SUFFIX:STRING=

//The base name of the built shared openvdb library. Prefixed by
// "lib" on UNIX platforms.
OPENVDB_SHARED_LIBRARY_NAME:STRING=openvdb

//Choose whether to enable SIMD compiler flags or not, options
// are: None SSE42 AVX.
//\n    Although not required, it is strongly recommended to enable
// SIMD. AVX implies SSE42.
//\n    None is the default.
OPENVDB_SIMD:STRING=None

//The base name of the built static openvdb library. Prefixed by
// "lib".
OPENVDB_STATIC_LIBRARY_NAME:STRING=openvdb

//Bypass minimum ABI requirement checks
OPENVDB_USE_DEPRECATED_ABI_7:BOOL=OFF

//Bypass minimum ABI requirement checks
OPENVDB_USE_DEPRECATED_ABI_8:BOOL=OFF

//Bypass future ABI check
OPENVDB_USE_FUTURE_ABI_10:BOOL=OFF

//Value Computed by CMake
OpenVDBCore_BINARY_DIR:STATIC=C:/Users/PC/source/repos/openvdb/openvdb/openvdb

//Value Computed by CMake
OpenVDBCore_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
OpenVDBCore_SOURCE_DIR:STATIC=C:/Users/PC/source/repos/openvdb/openvdb/openvdb

//Value Computed by CMake
OpenVDB_BINARY_DIR:STATIC=C:/Users/PC/source/repos/openvdb

//Value Computed by CMake
OpenVDB_IS_TOP_LEVEL:STATIC=ON

//Value Computed by CMake
OpenVDB_SOURCE_DIR:STATIC=C:/Users/PC/source/repos/openvdb

//A global list of library paths to additionally use into when
// searching for dependencies.
SYSTEM_LIBRARY_PATHS:STRING=

//No help, variable specified on the command line.
TBB_INCLUDEDIR:UNINITIALIZED=C:\Users\PC\source\repos\openvdb\tbb\oneTBB\my_installed_onetbb\include

//No help, variable specified on the command line.
TBB_LIBRARYDIR:UNINITIALIZED=C:\Users\PC\source\repos\openvdb\tbb\oneTBB\my_installed_onetbb\lib

//No help, variable specified on the command line.
TBB_ROOT:UNINITIALIZED=C:\Program Files\TBB\TBB

//Path to a file.
Tbb_INCLUDE_DIR:PATH=C:/Users/PC/source/repos/openvdb/oneTBB/include

//Path to a file.
Tbb_LEGACY_INCLUDE_DIR:PATH=Tbb_LEGACY_INCLUDE_DIR-NOTFOUND

//Path to a library.
Tbb_tbb_LIBRARY_DEBUG:FILEPATH=Tbb_tbb_LIBRARY_DEBUG-NOTFOUND

//Path to a library.
Tbb_tbb_LIBRARY_RELEASE:FILEPATH=C:/Program Files (x86)/TBB/lib/tbb.lib

//Use OpenVDB AX while building openvdb components.
USE_AX:BOOL=OFF

//Use blosc while building openvdb components. If OPENVDB_BUILD_CORE
// is OFF, CMake attempts to query the located
//\nopenvdb build configuration to decide on blosc support. You
// may set this to on to force blosc to be used if you
//\nknow it to be required.
USE_BLOSC:BOOL=ON

//Build using Ccache if found on the path
USE_CCACHE:BOOL=ON

//Always produce ANSI-colored output (GNU/Clang only).
USE_COLORED_OUTPUT:BOOL=OFF

//Use explicit instantiation for all supported classes and methods
// against a
//\npre-defined list of OpenVDB trees. This makes the core library
// larger and slower to compile, but speeds up
//\nthe compilation of all dependent code by bypassing the expensive
// template instantation.
USE_EXPLICIT_INSTANTIATION:BOOL=ON

//Use OpenEXR while building openvdb components. If enabled, this
// also switches USE_IMATH_HALF to ON unless
//\nit too was provided and set to OFF.
USE_EXR:BOOL=OFF

//Build the library against a Houdini installation. Turns on automatically
// if OPENVDB_BUILD_HOUDINI_PLUGIN is enabled.
//\nWhen enabled, you do not need to provide dependency locations
// for TBB, Blosc, IlmBase and OpenEXR. Boost must be
//\nprovided. IlmBase/OpenEXR can optionally be provided if Houdini
// Version >= 17.5.
USE_HOUDINI:BOOL=OFF

//Use the definiton of half floating point types from the Imath
// library. If OFF, the embedded definition provided
//\nby OpenVDB is used. If OPENVDB_BUILD_CORE is OFF, CMake attempts
// to query the located openvdb build configuration
//\nto select the correct half support. You may set this to on to
// force Imath half to be used if you know it to be
//\nrequired.
USE_IMATH_HALF:BOOL=OFF

//Use log4cplus while building openvdb components. If OPENVDB_BUILD_CORE
// is OFF, CMake attempts to query the
//\nlocated openvdb build configuration to decide on log4cplus support.
// You may set this to on to force log4cplus
//\nto be used if you know it to be required.
USE_LOG4CPLUS:BOOL=OFF

//Build the library against a Maya installation. Turns on automatically
// if OPENVDB_BUILD_MAYA_PLUGIN is enabled.
//\nWhen enabled, you do not need to provide dependency locations
// for TBB. All other dependencies must be provided.
USE_MAYA:BOOL=OFF

//Use NanoVDB while building openvdb components.
USE_NANOVDB:BOOL=OFF

//Use PNG while building openvdb components.
USE_PNG:BOOL=OFF

//Only search for and use static libraries. If OFF the shared versions
// of requried libraries are prioritised, falling
//\nback to static libraries. Forcing individual static dependencies
// can be enabled by setting XXX_USE_STATIC_LIBS
//\nto ON, where XXX is the package name. On Windows this behaviour
// is less strict, with any located libraries assumed
//\nto be static. This has no effect for any packages found with
// Xxx_DIR (i.e. CMake CONFIG mode).
USE_STATIC_DEPENDENCIES:BOOL=OFF

//Use TBB in building the NanoVDB library.
USE_TBB:BOOL=ON

//Use zlib while building openvdb components. If OPENVDB_BUILD_CORE
// is OFF, CMake attempts to query the located
//\nopenvdb build configuration to decide on zlib support. ZLib
// can only be disabled if Blosc is also disabled. 
USE_ZLIB:BOOL=ON


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: Boost_DIR
Boost_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_INCLUDE_DIR
Boost_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_IOSTREAMS_LIBRARY_DEBUG
Boost_IOSTREAMS_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_IOSTREAMS_LIBRARY_RELEASE
Boost_IOSTREAMS_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_LIBRARY_DIR_DEBUG
Boost_LIBRARY_DIR_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_LIBRARY_DIR_RELEASE
Boost_LIBRARY_DIR_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_REGEX_LIBRARY_DEBUG
Boost_REGEX_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Boost_REGEX_LIBRARY_RELEASE
Boost_REGEX_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=c:/Users/PC/source/repos/openvdb
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=24
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=0
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=C:/Users/PC/source/repos/cmake/cmake-3.24.0-windows-x86_64/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=C:/Users/PC/source/repos/cmake/cmake-3.24.0-windows-x86_64/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=C:/Users/PC/source/repos/cmake/cmake-3.24.0-windows-x86_64/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Visual Studio 17 2022
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=C:/Program Files/Microsoft Visual Studio/2022/Community
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=C:/Users/PC/source/repos/openvdb
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=2
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=C:/Users/PC/source/repos/cmake/cmake-3.24.0-windows-x86_64/share/cmake-3.24
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CONCURRENT_MALLOC
CONCURRENT_MALLOC-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DISABLE_CMAKE_SEARCH_PATHS
DISABLE_CMAKE_SEARCH_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DISABLE_DEPENDENCY_VERSION_CHECKS
DISABLE_DEPENDENCY_VERSION_CHECKS-ADVANCED:INTERNAL=1
//Details about finding Boost
FIND_PACKAGE_MESSAGE_DETAILS_Boost:INTERNAL=[C:/local/boost_1_74_0][cfound components: iostreams regex ][v1.74.0(1.70)]
//Details about finding TBB
FIND_PACKAGE_MESSAGE_DETAILS_TBB:INTERNAL=[C:/Users/PC/source/repos/openvdb/oneTBB/include][C:/Program Files (x86)/TBB/lib/tbb.lib][cfound components: tbb ][v(2019.0)]
//ADVANCED property for variable: MSVC_COMPRESS_PDB
MSVC_COMPRESS_PDB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_BUILD_HOUDINI_ABITESTS
OPENVDB_BUILD_HOUDINI_ABITESTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_CXX_STRICT
OPENVDB_CXX_STRICT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_ENABLE_RPATH
OPENVDB_ENABLE_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_FUTURE_DEPRECATION
OPENVDB_FUTURE_DEPRECATION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_SHARED_LIBRARY_NAME
OPENVDB_SHARED_LIBRARY_NAME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_SIMD
OPENVDB_SIMD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_STATIC_LIBRARY_NAME
OPENVDB_STATIC_LIBRARY_NAME-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_USE_DEPRECATED_ABI_7
OPENVDB_USE_DEPRECATED_ABI_7-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_USE_DEPRECATED_ABI_8
OPENVDB_USE_DEPRECATED_ABI_8-ADVANCED:INTERNAL=1
//ADVANCED property for variable: OPENVDB_USE_FUTURE_ABI_10
OPENVDB_USE_FUTURE_ABI_10-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SYSTEM_LIBRARY_PATHS
SYSTEM_LIBRARY_PATHS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Tbb_INCLUDE_DIR
Tbb_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_CCACHE
USE_CCACHE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_COLORED_OUTPUT
USE_COLORED_OUTPUT-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_HOUDINI
USE_HOUDINI-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_IMATH_HALF
USE_IMATH_HALF-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_LOG4CPLUS
USE_LOG4CPLUS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: USE_MAYA
USE_MAYA-ADVANCED:INTERNAL=1
//Components requested for this build tree.
_Boost_COMPONENTS_SEARCHED:INTERNAL=iostreams;regex
//Last used Boost_INCLUDE_DIR value.
_Boost_INCLUDE_DIR_LAST:INTERNAL=C:/local/boost_1_74_0
//Last used Boost_LIBRARY_DIR_DEBUG value.
_Boost_LIBRARY_DIR_DEBUG_LAST:INTERNAL=C:/local/boost_1_74_0/lib64-msvc-14.2
//Last used Boost_LIBRARY_DIR_RELEASE value.
_Boost_LIBRARY_DIR_RELEASE_LAST:INTERNAL=C:/local/boost_1_74_0/lib64-msvc-14.2
//Last used Boost_NAMESPACE value.
_Boost_NAMESPACE_LAST:INTERNAL=boost
//Last used Boost_USE_MULTITHREADED value.
_Boost_USE_MULTITHREADED_LAST:INTERNAL=TRUE
//Last used Boost_USE_STATIC_LIBS value.
_Boost_USE_STATIC_LIBS_LAST:INTERNAL=OFF
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=C:/Program Files/OpenVDB

